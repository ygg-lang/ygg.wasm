RootNode {
    statement: [
        GrammarStatement(
            GrammarStatementNode {
                grammar_dict: GrammarDictNode {
                    grammar_term: [
                        GrammarPair(
                            GrammarPairNode {
                                grammar_value: GrammarValueNode {
                                    grammar_dict: None,
                                    grammar_list: Some(
                                        GrammarListNode {
                                            grammar_value: [
                                                GrammarValueNode {
                                                    grammar_dict: None,
                                                    grammar_list: None,
                                                    namepath: None,
                                                    string_normal: None,
                                                    string_raw: Some(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "*.ygg",
                                                                span: 36..41,
                                                            },
                                                            span: 35..42,
                                                        },
                                                    ),
                                                    span: 35..42,
                                                },
                                            ],
                                            span: 34..43,
                                        },
                                    ),
                                    namepath: None,
                                    string_normal: None,
                                    string_raw: None,
                                    span: 34..43,
                                },
                                key: IdentifierNode {
                                    text: "patterns",
                                    span: 24..32,
                                },
                                span: 24..43,
                            },
                        ),
                    ],
                    span: 18..45,
                },
                identifier: IdentifierNode {
                    text: "Bootstrap",
                    span: 8..17,
                },
                span: 0..45,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Statement",
                                                            span: 64..73,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 64..74,
                                                },
                                                span: 64..74,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "EOI",
                                                            span: 75..78,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 75..79,
                                                },
                                                span: 75..79,
                                            },
                                        ],
                                        span: 64..79,
                                    },
                                ],
                                span: 64..79,
                            },
                        ],
                        span: 64..79,
                    },
                    span: 58..80,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "Root",
                    span: 53..57,
                },
                span: 47..80,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GrammarStatement",
                                                            span: 106..122,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 106..127,
                                                },
                                                span: 106..127,
                                            },
                                        ],
                                        span: 106..127,
                                    },
                                ],
                                span: 106..127,
                            },
                            span: 104..127,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ClassStatement",
                                                            span: 129..143,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 129..148,
                                                },
                                                span: 129..148,
                                            },
                                        ],
                                        span: 129..148,
                                    },
                                ],
                                span: 129..148,
                            },
                            span: 127..148,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "UnionStatement",
                                                            span: 150..164,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 150..169,
                                                },
                                                span: 150..169,
                                            },
                                        ],
                                        span: 150..169,
                                    },
                                ],
                                span: 150..169,
                            },
                            span: 148..169,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GroupStatement",
                                                            span: 171..185,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 171..190,
                                                },
                                                span: 171..190,
                                            },
                                        ],
                                        span: 171..190,
                                    },
                                ],
                                span: 171..190,
                            },
                            span: 169..190,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ExternalStatement",
                                                            span: 192..209,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 192..210,
                                                },
                                                span: 192..210,
                                            },
                                        ],
                                        span: 192..210,
                                    },
                                ],
                                span: 192..210,
                            },
                            span: 190..210,
                        },
                    ],
                    span: 98..211,
                },
                name: IdentifierNode {
                    text: "Statement",
                    span: 88..97,
                },
                span: 82..211,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "KW_GRAMMAR",
                                                            span: 363..373,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Remark,
                                                    ],
                                                    suffix: [],
                                                    span: 362..374,
                                                },
                                                span: 362..374,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 374..384,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 374..385,
                                                },
                                                span: 374..385,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "{",
                                                                span: 386..387,
                                                            },
                                                            span: 385..388,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 385..389,
                                                },
                                                span: 385..389,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GrammarTerm",
                                                            span: 389..400,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 389..401,
                                                },
                                                span: 389..401,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "}",
                                                                span: 403..404,
                                                            },
                                                            span: 402..405,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 402..406,
                                                },
                                                span: 402..406,
                                            },
                                        ],
                                        span: 362..406,
                                    },
                                ],
                                span: 362..406,
                            },
                        ],
                        span: 362..406,
                    },
                    span: 356..407,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "GrammarStatement",
                    span: 339..355,
                },
                span: 333..407,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GrammarPair",
                                                            span: 434..445,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 434..450,
                                                },
                                                span: 434..450,
                                            },
                                        ],
                                        span: 434..450,
                                    },
                                ],
                                span: 434..450,
                            },
                            span: 432..450,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Comma",
                                        span: 466..471,
                                    },
                                    right_associativity: None,
                                    span: 465..471,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexRange(
                                                        RegexRangeNode {
                                                            regex_negative: None,
                                                            text: "[,;]",
                                                            span: 452..456,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 452..465,
                                                },
                                                span: 452..465,
                                            },
                                        ],
                                        span: 452..465,
                                    },
                                ],
                                span: 452..465,
                            },
                            span: 450..471,
                        },
                    ],
                    span: 426..473,
                },
                name: IdentifierNode {
                    text: "GrammarTerm",
                    span: 414..425,
                },
                span: 408..473,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: Some(
                                                    IdentifierNode {
                                                        text: "key",
                                                        span: 498..501,
                                                    },
                                                ),
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 502..512,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 502..513,
                                                },
                                                span: 498..513,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: ":",
                                                                span: 514..515,
                                                            },
                                                            span: 513..516,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 513..517,
                                                },
                                                span: 513..517,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GrammarValue",
                                                            span: 517..529,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 517..530,
                                                },
                                                span: 517..530,
                                            },
                                        ],
                                        span: 498..530,
                                    },
                                ],
                                span: 498..530,
                            },
                        ],
                        span: 498..530,
                    },
                    span: 492..531,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "GrammarPair",
                    span: 480..491,
                },
                span: 474..531,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GrammarList",
                                                            span: 559..570,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 559..575,
                                                },
                                                span: 559..575,
                                            },
                                        ],
                                        span: 559..575,
                                    },
                                ],
                                span: 559..575,
                            },
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 577..587,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 577..592,
                                                },
                                                span: 577..592,
                                            },
                                        ],
                                        span: 577..592,
                                    },
                                ],
                                span: 577..592,
                            },
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "StringRaw",
                                                            span: 594..603,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 594..608,
                                                },
                                                span: 594..608,
                                            },
                                        ],
                                        span: 594..608,
                                    },
                                ],
                                span: 594..608,
                            },
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "StringNormal",
                                                            span: 610..622,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 610..623,
                                                },
                                                span: 610..623,
                                            },
                                        ],
                                        span: 610..623,
                                    },
                                ],
                                span: 610..623,
                            },
                        ],
                        span: 559..623,
                    },
                    span: 551..624,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "GrammarValue",
                    span: 538..550,
                },
                span: 532..624,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "[",
                                                                span: 650..651,
                                                            },
                                                            span: 649..652,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 649..653,
                                                },
                                                span: 649..653,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "GrammarValue",
                                                                                                    span: 654..666,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 654..667,
                                                                                        },
                                                                                        span: 654..667,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: GroupExpression(
                                                                                                GroupExpressionNode {
                                                                                                    expression: ExpressionNode {
                                                                                                        expression_hard: [
                                                                                                            ExpressionHardNode {
                                                                                                                expression_soft: [
                                                                                                                    ExpressionSoftNode {
                                                                                                                        expression_tag: [
                                                                                                                            ExpressionTagNode {
                                                                                                                                identifier: None,
                                                                                                                                term: TermNode {
                                                                                                                                    atomic: StringRaw(
                                                                                                                                        StringRawNode {
                                                                                                                                            string_raw_text: StringRawTextNode {
                                                                                                                                                text: ",",
                                                                                                                                                span: 669..670,
                                                                                                                                            },
                                                                                                                                            span: 668..671,
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                    prefix: [],
                                                                                                                                    suffix: [],
                                                                                                                                    span: 668..672,
                                                                                                                                },
                                                                                                                                span: 668..672,
                                                                                                                            },
                                                                                                                            ExpressionTagNode {
                                                                                                                                identifier: None,
                                                                                                                                term: TermNode {
                                                                                                                                    atomic: Identifier(
                                                                                                                                        IdentifierNode {
                                                                                                                                            text: "GrammarValue",
                                                                                                                                            span: 672..684,
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                    prefix: [],
                                                                                                                                    suffix: [],
                                                                                                                                    span: 672..684,
                                                                                                                                },
                                                                                                                                span: 672..684,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                        span: 668..684,
                                                                                                                    },
                                                                                                                ],
                                                                                                                span: 668..684,
                                                                                                            },
                                                                                                        ],
                                                                                                        span: 668..684,
                                                                                                    },
                                                                                                    span: 667..685,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [
                                                                                                Many,
                                                                                            ],
                                                                                            span: 667..686,
                                                                                        },
                                                                                        span: 667..686,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: StringRaw(
                                                                                                StringRawNode {
                                                                                                    string_raw_text: StringRawTextNode {
                                                                                                        text: ",",
                                                                                                        span: 688..689,
                                                                                                    },
                                                                                                    span: 687..690,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [
                                                                                                Optional,
                                                                                            ],
                                                                                            span: 687..691,
                                                                                        },
                                                                                        span: 687..691,
                                                                                    },
                                                                                ],
                                                                                span: 654..691,
                                                                            },
                                                                        ],
                                                                        span: 654..691,
                                                                    },
                                                                ],
                                                                span: 654..691,
                                                            },
                                                            span: 653..692,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 653..693,
                                                },
                                                span: 653..693,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "]",
                                                                span: 695..696,
                                                            },
                                                            span: 694..697,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 694..698,
                                                },
                                                span: 694..698,
                                            },
                                        ],
                                        span: 649..698,
                                    },
                                ],
                                span: 649..698,
                            },
                        ],
                        span: 649..698,
                    },
                    span: 643..699,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "GrammarList",
                    span: 631..642,
                },
                span: 625..699,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "DecoratorCall",
                                                            span: 846..859,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 846..860,
                                                },
                                                span: 846..860,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ModifierCall",
                                                            span: 861..873,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 861..874,
                                                },
                                                span: 861..874,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "KW_CLASS",
                                                            span: 876..884,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Remark,
                                                    ],
                                                    suffix: [],
                                                    span: 875..885,
                                                },
                                                span: 875..885,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: Some(
                                                                                            IdentifierNode {
                                                                                                text: "name",
                                                                                                span: 886..890,
                                                                                            },
                                                                                        ),
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 891..901,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 891..901,
                                                                                        },
                                                                                        span: 886..901,
                                                                                    },
                                                                                ],
                                                                                span: 886..901,
                                                                            },
                                                                        ],
                                                                        span: 886..901,
                                                                    },
                                                                ],
                                                                span: 886..901,
                                                            },
                                                            span: 885..902,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 885..903,
                                                },
                                                span: 885..903,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: StringRaw(
                                                                                                StringRawNode {
                                                                                                    string_raw_text: StringRawTextNode {
                                                                                                        text: "->",
                                                                                                        span: 905..907,
                                                                                                    },
                                                                                                    span: 904..908,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 904..909,
                                                                                        },
                                                                                        span: 904..909,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: Some(
                                                                                            IdentifierNode {
                                                                                                text: "cast",
                                                                                                span: 909..913,
                                                                                            },
                                                                                        ),
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 914..924,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 914..924,
                                                                                        },
                                                                                        span: 909..924,
                                                                                    },
                                                                                ],
                                                                                span: 904..924,
                                                                            },
                                                                        ],
                                                                        span: 904..924,
                                                                    },
                                                                ],
                                                                span: 904..924,
                                                            },
                                                            span: 903..925,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 903..926,
                                                },
                                                span: 903..926,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "OP_REMARK",
                                                            span: 927..936,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 927..937,
                                                },
                                                span: 927..937,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ClassBlock",
                                                            span: 938..948,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 938..949,
                                                },
                                                span: 938..949,
                                            },
                                        ],
                                        span: 846..949,
                                    },
                                ],
                                span: 846..949,
                            },
                        ],
                        span: 846..949,
                    },
                    span: 840..950,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "ClassStatement",
                    span: 825..839,
                },
                span: 819..950,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "{",
                                                                span: 975..976,
                                                            },
                                                            span: 974..977,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 974..978,
                                                },
                                                span: 974..978,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "|",
                                                                span: 979..980,
                                                            },
                                                            span: 978..981,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 978..982,
                                                },
                                                span: 978..982,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Expression",
                                                            span: 983..993,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 983..994,
                                                },
                                                span: 983..994,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "}",
                                                                span: 995..996,
                                                            },
                                                            span: 994..997,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 994..998,
                                                },
                                                span: 994..998,
                                            },
                                        ],
                                        span: 974..998,
                                    },
                                ],
                                span: 974..998,
                            },
                        ],
                        span: 974..998,
                    },
                    span: 968..999,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "ClassBlock",
                    span: 957..967,
                },
                span: 951..999,
            },
        ),
        GroupStatement(
            GroupStatementNode {
                decorator_call: [],
                group_block: GroupBlockNode {
                    group_pair: [
                        GroupPairNode {
                            atomic: StringRaw(
                                StringRawNode {
                                    string_raw_text: StringRawTextNode {
                                        text: "^",
                                        span: 1024..1025,
                                    },
                                    span: 1023..1026,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "OP_REMARK",
                                span: 1012..1021,
                            },
                            span: 1012..1026,
                        },
                    ],
                    span: 1006..1028,
                },
                identifier: None,
                modifier_call: [],
                span: 1000..1028,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "DecoratorCall",
                                                            span: 1175..1188,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 1175..1189,
                                                },
                                                span: 1175..1189,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ModifierCall",
                                                            span: 1190..1202,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 1190..1203,
                                                },
                                                span: 1190..1203,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "KW_UNION",
                                                            span: 1205..1213,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Remark,
                                                    ],
                                                    suffix: [],
                                                    span: 1204..1214,
                                                },
                                                span: 1204..1214,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: Some(
                                                                                            IdentifierNode {
                                                                                                text: "name",
                                                                                                span: 1215..1219,
                                                                                            },
                                                                                        ),
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 1220..1230,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 1220..1230,
                                                                                        },
                                                                                        span: 1215..1230,
                                                                                    },
                                                                                ],
                                                                                span: 1215..1230,
                                                                            },
                                                                        ],
                                                                        span: 1215..1230,
                                                                    },
                                                                ],
                                                                span: 1215..1230,
                                                            },
                                                            span: 1214..1231,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1214..1232,
                                                },
                                                span: 1214..1232,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "OP_REMARK",
                                                            span: 1232..1241,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 1232..1242,
                                                },
                                                span: 1232..1242,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "UnionBlock",
                                                            span: 1243..1253,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1243..1254,
                                                },
                                                span: 1243..1254,
                                            },
                                        ],
                                        span: 1175..1254,
                                    },
                                ],
                                span: 1175..1254,
                            },
                        ],
                        span: 1175..1254,
                    },
                    span: 1169..1255,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "UnionStatement",
                    span: 1154..1168,
                },
                span: 1148..1255,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "{",
                                                                span: 1280..1281,
                                                            },
                                                            span: 1279..1282,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1279..1283,
                                                },
                                                span: 1279..1283,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "UnionBranch",
                                                            span: 1283..1294,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 1283..1295,
                                                },
                                                span: 1283..1295,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "}",
                                                                span: 1297..1298,
                                                            },
                                                            span: 1296..1299,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1296..1300,
                                                },
                                                span: 1296..1300,
                                            },
                                        ],
                                        span: 1279..1300,
                                    },
                                ],
                                span: 1279..1300,
                            },
                        ],
                        span: 1279..1300,
                    },
                    span: 1273..1301,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "UnionBlock",
                    span: 1262..1272,
                },
                span: 1256..1301,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "|",
                                                                span: 1327..1328,
                                                            },
                                                            span: 1326..1329,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1326..1330,
                                                },
                                                span: 1326..1330,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ExpressionHard",
                                                            span: 1330..1344,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1330..1345,
                                                },
                                                span: 1330..1345,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "BranchTag",
                                                            span: 1345..1354,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 1345..1355,
                                                },
                                                span: 1345..1355,
                                            },
                                        ],
                                        span: 1326..1355,
                                    },
                                ],
                                span: 1326..1356,
                            },
                        ],
                        span: 1326..1356,
                    },
                    span: 1320..1357,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "UnionBranch",
                    span: 1308..1319,
                },
                span: 1302..1357,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "#",
                                                                span: 1402..1403,
                                                            },
                                                            span: 1401..1404,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1401..1405,
                                                },
                                                span: 1401..1405,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 1405..1415,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1405..1416,
                                                },
                                                span: 1405..1416,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RightAssociativity",
                                                            span: 1416..1434,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 1416..1435,
                                                },
                                                span: 1416..1435,
                                            },
                                        ],
                                        span: 1401..1435,
                                    },
                                ],
                                span: 1401..1436,
                            },
                        ],
                        span: 1401..1436,
                    },
                    span: 1395..1437,
                },
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "field",
                                                                        span: 1365..1370,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 1365..1370,
                                                            },
                                                            span: 1365..1370,
                                                        },
                                                    ],
                                                    span: 1365..1370,
                                                },
                                            ],
                                            span: 1365..1370,
                                        },
                                    ],
                                    span: 1365..1370,
                                },
                            ],
                            span: 1364..1371,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 1359..1364,
                            },
                            span: 1358..1364,
                        },
                        span: 1358..1371,
                    },
                ],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 1372..1378,
                        },
                        span: 1372..1378,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "BranchTag",
                    span: 1385..1394,
                },
                span: 1358..1437,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: ">",
                                                                span: 1470..1471,
                                                            },
                                                            span: 1469..1472,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1469..1473,
                                                },
                                                span: 1469..1473,
                                            },
                                        ],
                                        span: 1469..1473,
                                    },
                                ],
                                span: 1469..1473,
                            },
                        ],
                        span: 1469..1473,
                    },
                    span: 1463..1474,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "RightAssociativity",
                    span: 1444..1462,
                },
                span: 1438..1474,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "DecoratorCall",
                                                            span: 1623..1636,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 1623..1637,
                                                },
                                                span: 1623..1637,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ModifierCall",
                                                            span: 1638..1650,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 1638..1651,
                                                },
                                                span: 1638..1651,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "KW_GROUP",
                                                            span: 1653..1661,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Remark,
                                                    ],
                                                    suffix: [],
                                                    span: 1652..1662,
                                                },
                                                span: 1652..1662,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 1662..1672,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 1662..1673,
                                                },
                                                span: 1662..1673,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GroupBlock",
                                                            span: 1674..1684,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1674..1685,
                                                },
                                                span: 1674..1685,
                                            },
                                        ],
                                        span: 1623..1685,
                                    },
                                ],
                                span: 1623..1685,
                            },
                        ],
                        span: 1623..1685,
                    },
                    span: 1617..1686,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "GroupStatement",
                    span: 1602..1616,
                },
                span: 1596..1686,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "{",
                                                                span: 1711..1712,
                                                            },
                                                            span: 1710..1713,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1710..1714,
                                                },
                                                span: 1710..1714,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GroupPair",
                                                            span: 1714..1723,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 1714..1724,
                                                },
                                                span: 1714..1724,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "}",
                                                                span: 1726..1727,
                                                            },
                                                            span: 1725..1728,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1725..1729,
                                                },
                                                span: 1725..1729,
                                            },
                                        ],
                                        span: 1710..1729,
                                    },
                                ],
                                span: 1710..1729,
                            },
                        ],
                        span: 1710..1729,
                    },
                    span: 1704..1730,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "GroupBlock",
                    span: 1693..1703,
                },
                span: 1687..1730,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 1753..1763,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1753..1764,
                                                },
                                                span: 1753..1764,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: ":",
                                                                span: 1765..1766,
                                                            },
                                                            span: 1764..1767,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1764..1768,
                                                },
                                                span: 1764..1768,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Atomic",
                                                            span: 1768..1774,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1768..1775,
                                                },
                                                span: 1768..1775,
                                            },
                                        ],
                                        span: 1753..1775,
                                    },
                                ],
                                span: 1753..1775,
                            },
                        ],
                        span: 1753..1775,
                    },
                    span: 1747..1776,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "GroupPair",
                    span: 1737..1746,
                },
                span: 1731..1776,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "KW_EXTERNAL",
                                                            span: 1931..1942,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1931..1943,
                                                },
                                                span: 1931..1943,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 1943..1953,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1943..1954,
                                                },
                                                span: 1943..1954,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "LinkerBlock",
                                                            span: 1954..1965,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1954..1966,
                                                },
                                                span: 1954..1966,
                                            },
                                        ],
                                        span: 1931..1966,
                                    },
                                ],
                                span: 1931..1966,
                            },
                        ],
                        span: 1931..1966,
                    },
                    span: 1925..1967,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "ExternalStatement",
                    span: 1907..1924,
                },
                span: 1901..1967,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "{",
                                                                span: 1993..1994,
                                                            },
                                                            span: 1992..1995,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 1992..1996,
                                                },
                                                span: 1992..1996,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "LinkerPair",
                                                            span: 1996..2006,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 1996..2007,
                                                },
                                                span: 1996..2007,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "}",
                                                                span: 2009..2010,
                                                            },
                                                            span: 2008..2011,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2008..2012,
                                                },
                                                span: 2008..2012,
                                            },
                                        ],
                                        span: 1992..2012,
                                    },
                                ],
                                span: 1992..2012,
                            },
                        ],
                        span: 1992..2012,
                    },
                    span: 1986..2013,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "LinkerBlock",
                    span: 1974..1985,
                },
                span: 1968..2013,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 2037..2047,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2037..2048,
                                                },
                                                span: 2037..2048,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: ":",
                                                                span: 2049..2050,
                                                            },
                                                            span: 2048..2051,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2048..2052,
                                                },
                                                span: 2048..2052,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "NamepathFree",
                                                            span: 2052..2064,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2052..2065,
                                                },
                                                span: 2052..2065,
                                            },
                                        ],
                                        span: 2037..2065,
                                    },
                                ],
                                span: 2037..2065,
                            },
                        ],
                        span: 2037..2065,
                    },
                    span: 2031..2066,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "LinkerPair",
                    span: 2020..2030,
                },
                span: 2014..2066,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "DecoratorName",
                                                            span: 2214..2227,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2214..2228,
                                                },
                                                span: 2214..2228,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "CallBody",
                                                            span: 2228..2236,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2228..2237,
                                                },
                                                span: 2228..2237,
                                            },
                                        ],
                                        span: 2214..2237,
                                    },
                                ],
                                span: 2214..2237,
                            },
                        ],
                        span: 2214..2237,
                    },
                    span: 2208..2238,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "DecoratorCall",
                    span: 2194..2207,
                },
                span: 2188..2238,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexRange(
                                                        RegexRangeNode {
                                                            regex_negative: None,
                                                            text: "[@\\#]",
                                                            span: 2284..2289,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2284..2290,
                                                },
                                                span: 2284..2290,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 2290..2300,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2290..2301,
                                                },
                                                span: 2290..2301,
                                            },
                                        ],
                                        span: 2284..2301,
                                    },
                                ],
                                span: 2284..2301,
                            },
                        ],
                        span: 2284..2301,
                    },
                    span: 2278..2302,
                },
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "annotation",
                                                                        span: 2246..2256,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2246..2256,
                                                            },
                                                            span: 2246..2256,
                                                        },
                                                    ],
                                                    span: 2246..2256,
                                                },
                                            ],
                                            span: 2246..2256,
                                        },
                                    ],
                                    span: 2246..2256,
                                },
                            ],
                            span: 2245..2257,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 2240..2245,
                            },
                            span: 2239..2245,
                        },
                        span: 2239..2257,
                    },
                ],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "DecoratorName",
                    span: 2264..2277,
                },
                span: 2239..2302,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "FunctionName",
                                                            span: 2328..2340,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2328..2341,
                                                },
                                                span: 2328..2341,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "CallBody",
                                                            span: 2341..2349,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2341..2350,
                                                },
                                                span: 2341..2350,
                                            },
                                        ],
                                        span: 2328..2350,
                                    },
                                ],
                                span: 2328..2350,
                            },
                        ],
                        span: 2328..2350,
                    },
                    span: 2322..2351,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "FunctionCall",
                    span: 2309..2321,
                },
                span: 2303..2351,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "@",
                                                                span: 2395..2396,
                                                            },
                                                            span: 2394..2397,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2394..2398,
                                                },
                                                span: 2394..2398,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 2398..2408,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2398..2409,
                                                },
                                                span: 2398..2409,
                                            },
                                        ],
                                        span: 2394..2409,
                                    },
                                ],
                                span: 2394..2409,
                            },
                        ],
                        span: 2394..2409,
                    },
                    span: 2388..2410,
                },
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "function",
                                                                        span: 2359..2367,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 2359..2367,
                                                            },
                                                            span: 2359..2367,
                                                        },
                                                    ],
                                                    span: 2359..2367,
                                                },
                                            ],
                                            span: 2359..2367,
                                        },
                                    ],
                                    span: 2359..2367,
                                },
                            ],
                            span: 2358..2368,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 2353..2358,
                            },
                            span: 2352..2358,
                        },
                        span: 2352..2368,
                    },
                ],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "FunctionName",
                    span: 2375..2387,
                },
                span: 2352..2410,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "(",
                                                                span: 2433..2434,
                                                            },
                                                            span: 2432..2435,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2432..2436,
                                                },
                                                span: 2432..2436,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Expression",
                                                                                                    span: 2437..2447,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2437..2448,
                                                                                        },
                                                                                        span: 2437..2448,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: GroupExpression(
                                                                                                GroupExpressionNode {
                                                                                                    expression: ExpressionNode {
                                                                                                        expression_hard: [
                                                                                                            ExpressionHardNode {
                                                                                                                expression_soft: [
                                                                                                                    ExpressionSoftNode {
                                                                                                                        expression_tag: [
                                                                                                                            ExpressionTagNode {
                                                                                                                                identifier: None,
                                                                                                                                term: TermNode {
                                                                                                                                    atomic: StringRaw(
                                                                                                                                        StringRawNode {
                                                                                                                                            string_raw_text: StringRawTextNode {
                                                                                                                                                text: ",",
                                                                                                                                                span: 2450..2451,
                                                                                                                                            },
                                                                                                                                            span: 2449..2452,
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                    prefix: [],
                                                                                                                                    suffix: [],
                                                                                                                                    span: 2449..2453,
                                                                                                                                },
                                                                                                                                span: 2449..2453,
                                                                                                                            },
                                                                                                                            ExpressionTagNode {
                                                                                                                                identifier: None,
                                                                                                                                term: TermNode {
                                                                                                                                    atomic: Identifier(
                                                                                                                                        IdentifierNode {
                                                                                                                                            text: "Expression",
                                                                                                                                            span: 2453..2463,
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                    prefix: [],
                                                                                                                                    suffix: [],
                                                                                                                                    span: 2453..2463,
                                                                                                                                },
                                                                                                                                span: 2453..2463,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                        span: 2449..2463,
                                                                                                                    },
                                                                                                                ],
                                                                                                                span: 2449..2463,
                                                                                                            },
                                                                                                        ],
                                                                                                        span: 2449..2463,
                                                                                                    },
                                                                                                    span: 2448..2464,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [
                                                                                                Many,
                                                                                            ],
                                                                                            span: 2448..2465,
                                                                                        },
                                                                                        span: 2448..2465,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: StringRaw(
                                                                                                StringRawNode {
                                                                                                    string_raw_text: StringRawTextNode {
                                                                                                        text: ",",
                                                                                                        span: 2467..2468,
                                                                                                    },
                                                                                                    span: 2466..2469,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [
                                                                                                Optional,
                                                                                            ],
                                                                                            span: 2466..2470,
                                                                                        },
                                                                                        span: 2466..2470,
                                                                                    },
                                                                                ],
                                                                                span: 2437..2470,
                                                                            },
                                                                        ],
                                                                        span: 2437..2470,
                                                                    },
                                                                ],
                                                                span: 2437..2470,
                                                            },
                                                            span: 2436..2471,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 2436..2472,
                                                },
                                                span: 2436..2472,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: ")",
                                                                span: 2474..2475,
                                                            },
                                                            span: 2473..2476,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2473..2477,
                                                },
                                                span: 2473..2477,
                                            },
                                        ],
                                        span: 2432..2477,
                                    },
                                ],
                                span: 2432..2477,
                            },
                        ],
                        span: 2432..2477,
                    },
                    span: 2426..2478,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "CallBody",
                    span: 2417..2425,
                },
                span: 2411..2478,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ExpressionHard",
                                                            span: 2623..2637,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2623..2638,
                                                },
                                                span: 2623..2638,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: StringRaw(
                                                                                                StringRawNode {
                                                                                                    string_raw_text: StringRawTextNode {
                                                                                                        text: "|",
                                                                                                        span: 2640..2641,
                                                                                                    },
                                                                                                    span: 2639..2642,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2639..2643,
                                                                                        },
                                                                                        span: 2639..2643,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "ExpressionHard",
                                                                                                    span: 2643..2657,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2643..2657,
                                                                                        },
                                                                                        span: 2643..2657,
                                                                                    },
                                                                                ],
                                                                                span: 2639..2657,
                                                                            },
                                                                        ],
                                                                        span: 2639..2657,
                                                                    },
                                                                ],
                                                                span: 2639..2657,
                                                            },
                                                            span: 2638..2658,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 2638..2659,
                                                },
                                                span: 2638..2659,
                                            },
                                        ],
                                        span: 2623..2659,
                                    },
                                ],
                                span: 2623..2660,
                            },
                        ],
                        span: 2623..2660,
                    },
                    span: 2621..2661,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "Expression",
                    span: 2606..2616,
                },
                span: 2600..2661,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ExpressionSoft",
                                                            span: 2685..2699,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2685..2700,
                                                },
                                                span: 2685..2700,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: StringRaw(
                                                                                                StringRawNode {
                                                                                                    string_raw_text: StringRawTextNode {
                                                                                                        text: "~",
                                                                                                        span: 2702..2703,
                                                                                                    },
                                                                                                    span: 2701..2704,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2701..2705,
                                                                                        },
                                                                                        span: 2701..2705,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "ExpressionSoft",
                                                                                                    span: 2705..2719,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2705..2719,
                                                                                        },
                                                                                        span: 2705..2719,
                                                                                    },
                                                                                ],
                                                                                span: 2701..2719,
                                                                            },
                                                                        ],
                                                                        span: 2701..2719,
                                                                    },
                                                                ],
                                                                span: 2701..2719,
                                                            },
                                                            span: 2700..2720,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 2700..2721,
                                                },
                                                span: 2700..2721,
                                            },
                                        ],
                                        span: 2685..2721,
                                    },
                                ],
                                span: 2685..2722,
                            },
                        ],
                        span: 2685..2722,
                    },
                    span: 2683..2723,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "ExpressionHard",
                    span: 2668..2682,
                },
                span: 2662..2723,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ExpressionTag",
                                                            span: 2747..2760,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2747..2761,
                                                },
                                                span: 2747..2761,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ExpressionTag",
                                                            span: 2761..2774,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 2761..2775,
                                                },
                                                span: 2761..2775,
                                            },
                                        ],
                                        span: 2747..2775,
                                    },
                                ],
                                span: 2747..2776,
                            },
                        ],
                        span: 2747..2776,
                    },
                    span: 2745..2777,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "ExpressionSoft",
                    span: 2730..2744,
                },
                span: 2724..2777,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 2802..2812,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2802..2813,
                                                                                        },
                                                                                        span: 2802..2813,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: StringRaw(
                                                                                                StringRawNode {
                                                                                                    string_raw_text: StringRawTextNode {
                                                                                                        text: ":",
                                                                                                        span: 2814..2815,
                                                                                                    },
                                                                                                    span: 2813..2816,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 2813..2816,
                                                                                        },
                                                                                        span: 2813..2816,
                                                                                    },
                                                                                ],
                                                                                span: 2802..2816,
                                                                            },
                                                                        ],
                                                                        span: 2802..2816,
                                                                    },
                                                                ],
                                                                span: 2802..2816,
                                                            },
                                                            span: 2801..2817,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 2801..2818,
                                                },
                                                span: 2801..2818,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Term",
                                                            span: 2819..2823,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2819..2824,
                                                },
                                                span: 2819..2824,
                                            },
                                        ],
                                        span: 2801..2824,
                                    },
                                ],
                                span: 2801..2824,
                            },
                        ],
                        span: 2801..2824,
                    },
                    span: 2799..2825,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "ExpressionTag",
                    span: 2784..2797,
                },
                span: 2778..2825,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Prefix",
                                                            span: 2843..2849,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 2843..2850,
                                                },
                                                span: 2843..2850,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Atomic",
                                                            span: 2851..2857,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2851..2858,
                                                },
                                                span: 2851..2858,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Suffix",
                                                            span: 2858..2864,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 2858..2865,
                                                },
                                                span: 2858..2865,
                                            },
                                        ],
                                        span: 2843..2865,
                                    },
                                ],
                                span: 2843..2866,
                            },
                        ],
                        span: 2843..2866,
                    },
                    span: 2837..2867,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "Term",
                    span: 2832..2836,
                },
                span: 2826..2867,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Negative",
                                        span: 2894..2902,
                                    },
                                    right_associativity: None,
                                    span: 2893..2902,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "!",
                                                                span: 2890..2891,
                                                            },
                                                            span: 2889..2892,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2889..2893,
                                                },
                                                span: 2889..2893,
                                            },
                                        ],
                                        span: 2889..2893,
                                    },
                                ],
                                span: 2889..2893,
                            },
                            span: 2887..2902,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Positive",
                                        span: 2914..2922,
                                    },
                                    right_associativity: None,
                                    span: 2913..2922,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "&",
                                                                span: 2910..2911,
                                                            },
                                                            span: 2909..2912,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2909..2913,
                                                },
                                                span: 2909..2913,
                                            },
                                        ],
                                        span: 2909..2913,
                                    },
                                ],
                                span: 2909..2913,
                            },
                            span: 2907..2922,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Remark",
                                        span: 2934..2940,
                                    },
                                    right_associativity: None,
                                    span: 2933..2940,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "^",
                                                                span: 2930..2931,
                                                            },
                                                            span: 2929..2932,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2929..2933,
                                                },
                                                span: 2929..2933,
                                            },
                                        ],
                                        span: 2929..2933,
                                    },
                                ],
                                span: 2929..2933,
                            },
                            span: 2927..2940,
                        },
                    ],
                    span: 2881..2942,
                },
                name: IdentifierNode {
                    text: "Prefix",
                    span: 2874..2880,
                },
                span: 2868..2942,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Optional",
                                        span: 2969..2977,
                                    },
                                    right_associativity: None,
                                    span: 2968..2977,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "?",
                                                                span: 2965..2966,
                                                            },
                                                            span: 2964..2967,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2964..2968,
                                                },
                                                span: 2964..2968,
                                            },
                                        ],
                                        span: 2964..2968,
                                    },
                                ],
                                span: 2964..2968,
                            },
                            span: 2962..2977,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Many",
                                        span: 2989..2993,
                                    },
                                    right_associativity: None,
                                    span: 2988..2993,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "*",
                                                                span: 2985..2986,
                                                            },
                                                            span: 2984..2987,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 2984..2988,
                                                },
                                                span: 2984..2988,
                                            },
                                        ],
                                        span: 2984..2988,
                                    },
                                ],
                                span: 2984..2988,
                            },
                            span: 2982..2993,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Many1",
                                        span: 3005..3010,
                                    },
                                    right_associativity: None,
                                    span: 3004..3010,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "+",
                                                                span: 3001..3002,
                                                            },
                                                            span: 3000..3003,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3000..3004,
                                                },
                                                span: 3000..3004,
                                            },
                                        ],
                                        span: 3000..3004,
                                    },
                                ],
                                span: 3000..3004,
                            },
                            span: 2998..3010,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RangeExact",
                                                            span: 3017..3027,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3017..3032,
                                                },
                                                span: 3017..3032,
                                            },
                                        ],
                                        span: 3017..3032,
                                    },
                                ],
                                span: 3017..3032,
                            },
                            span: 3015..3032,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Range",
                                                            span: 3034..3039,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3034..3040,
                                                },
                                                span: 3034..3040,
                                            },
                                        ],
                                        span: 3034..3040,
                                    },
                                ],
                                span: 3034..3040,
                            },
                            span: 3032..3040,
                        },
                    ],
                    span: 2956..3041,
                },
                name: IdentifierNode {
                    text: "Suffix",
                    span: 2949..2955,
                },
                span: 2943..3041,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "GroupExpression",
                                                            span: 3184..3199,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3184..3204,
                                                },
                                                span: 3184..3204,
                                            },
                                        ],
                                        span: 3184..3204,
                                    },
                                ],
                                span: 3184..3204,
                            },
                            span: 3182..3204,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "FunctionCall",
                                                            span: 3206..3218,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3206..3223,
                                                },
                                                span: 3206..3223,
                                            },
                                        ],
                                        span: 3206..3223,
                                    },
                                ],
                                span: 3206..3223,
                            },
                            span: 3204..3223,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Boolean",
                                                            span: 3225..3232,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3225..3237,
                                                },
                                                span: 3225..3237,
                                            },
                                        ],
                                        span: 3225..3237,
                                    },
                                ],
                                span: 3225..3237,
                            },
                            span: 3223..3237,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Integer",
                                                            span: 3239..3246,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3239..3251,
                                                },
                                                span: 3239..3251,
                                            },
                                        ],
                                        span: 3239..3251,
                                    },
                                ],
                                span: 3239..3251,
                            },
                            span: 3237..3251,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "StringRaw",
                                                            span: 3253..3262,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3253..3267,
                                                },
                                                span: 3253..3267,
                                            },
                                        ],
                                        span: 3253..3267,
                                    },
                                ],
                                span: 3253..3267,
                            },
                            span: 3251..3267,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "StringNormal",
                                                            span: 3269..3281,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3269..3286,
                                                },
                                                span: 3269..3286,
                                            },
                                        ],
                                        span: 3269..3286,
                                    },
                                ],
                                span: 3269..3286,
                            },
                            span: 3267..3286,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Category",
                                                            span: 3288..3296,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3288..3301,
                                                },
                                                span: 3288..3301,
                                            },
                                        ],
                                        span: 3288..3301,
                                    },
                                ],
                                span: 3288..3301,
                            },
                            span: 3286..3301,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "EscapedUnicode",
                                                            span: 3303..3317,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3303..3322,
                                                },
                                                span: 3303..3322,
                                            },
                                        ],
                                        span: 3303..3322,
                                    },
                                ],
                                span: 3303..3322,
                            },
                            span: 3301..3322,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RegexEmbed",
                                                            span: 3324..3334,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3324..3339,
                                                },
                                                span: 3324..3339,
                                            },
                                        ],
                                        span: 3324..3339,
                                    },
                                ],
                                span: 3324..3339,
                            },
                            span: 3322..3339,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RegexRange",
                                                            span: 3341..3351,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3341..3356,
                                                },
                                                span: 3341..3356,
                                            },
                                        ],
                                        span: 3341..3356,
                                    },
                                ],
                                span: 3341..3356,
                            },
                            span: 3339..3356,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 3358..3368,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3358..3369,
                                                },
                                                span: 3358..3369,
                                            },
                                        ],
                                        span: 3358..3369,
                                    },
                                ],
                                span: 3358..3369,
                            },
                            span: 3356..3369,
                        },
                    ],
                    span: 3176..3370,
                },
                name: IdentifierNode {
                    text: "Atomic",
                    span: 3169..3175,
                },
                span: 3163..3370,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "(",
                                                                span: 3400..3401,
                                                            },
                                                            span: 3399..3402,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3399..3403,
                                                },
                                                span: 3399..3403,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "|",
                                                                span: 3404..3405,
                                                            },
                                                            span: 3403..3406,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 3403..3407,
                                                },
                                                span: 3403..3407,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Expression",
                                                            span: 3408..3418,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3408..3419,
                                                },
                                                span: 3408..3419,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: ")",
                                                                span: 3420..3421,
                                                            },
                                                            span: 3419..3422,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3419..3423,
                                                },
                                                span: 3419..3423,
                                            },
                                        ],
                                        span: 3399..3423,
                                    },
                                ],
                                span: 3399..3423,
                            },
                        ],
                        span: 3399..3423,
                    },
                    span: 3393..3424,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "GroupExpression",
                    span: 3377..3392,
                },
                span: 3371..3424,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringNormal(
                                                        StringNormalNode {
                                                            string_item: [
                                                                TextAny(
                                                                    TextAnyNode {
                                                                        text: "'",
                                                                        span: 3577..3578,
                                                                    },
                                                                ),
                                                            ],
                                                            span: 3576..3579,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3576..3580,
                                                },
                                                span: 3576..3580,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "StringRawText",
                                                            span: 3580..3593,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3580..3594,
                                                },
                                                span: 3580..3594,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringNormal(
                                                        StringNormalNode {
                                                            string_item: [
                                                                TextAny(
                                                                    TextAnyNode {
                                                                        text: "'",
                                                                        span: 3595..3596,
                                                                    },
                                                                ),
                                                            ],
                                                            span: 3594..3597,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3594..3598,
                                                },
                                                span: 3594..3598,
                                            },
                                        ],
                                        span: 3576..3598,
                                    },
                                ],
                                span: 3576..3598,
                            },
                        ],
                        span: 3576..3598,
                    },
                    span: 3570..3599,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 3547..3553,
                        },
                        span: 3547..3553,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "StringRaw",
                    span: 3560..3569,
                },
                span: 3547..3599,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexEmbed(
                                                        RegexEmbedNode {
                                                            regex_item: [
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "[",
                                                                        span: 3632..3633,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "^",
                                                                        span: 3633..3634,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "'",
                                                                        span: 3634..3635,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "]",
                                                                        span: 3635..3636,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "*",
                                                                        span: 3636..3637,
                                                                    },
                                                                ),
                                                            ],
                                                            span: 3631..3638,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3631..3639,
                                                },
                                                span: 3631..3639,
                                            },
                                        ],
                                        span: 3631..3639,
                                    },
                                ],
                                span: 3631..3639,
                            },
                        ],
                        span: 3631..3639,
                    },
                    span: 3625..3640,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 3600..3604,
                        },
                        span: 3600..3604,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "StringRawText",
                    span: 3611..3624,
                },
                span: 3600..3640,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "\"",
                                                                span: 3674..3675,
                                                            },
                                                            span: 3673..3676,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3673..3677,
                                                },
                                                span: 3673..3677,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "StringItem",
                                                            span: 3677..3687,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 3677..3688,
                                                },
                                                span: 3677..3688,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "\"",
                                                                span: 3690..3691,
                                                            },
                                                            span: 3689..3692,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3689..3693,
                                                },
                                                span: 3689..3693,
                                            },
                                        ],
                                        span: 3673..3693,
                                    },
                                ],
                                span: 3673..3693,
                            },
                        ],
                        span: 3673..3693,
                    },
                    span: 3667..3694,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 3641..3647,
                        },
                        span: 3641..3647,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "StringNormal",
                    span: 3654..3666,
                },
                span: 3641..3694,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "EscapedUnicode",
                                                            span: 3720..3734,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3720..3739,
                                                },
                                                span: 3720..3739,
                                            },
                                        ],
                                        span: 3720..3739,
                                    },
                                ],
                                span: 3720..3739,
                            },
                            span: 3718..3739,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "EscapedCharacter",
                                                            span: 3741..3757,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3741..3762,
                                                },
                                                span: 3741..3762,
                                            },
                                        ],
                                        span: 3741..3762,
                                    },
                                ],
                                span: 3741..3762,
                            },
                            span: 3739..3762,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "TextAny",
                                                            span: 3764..3771,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3764..3772,
                                                },
                                                span: 3764..3772,
                                            },
                                        ],
                                        span: 3764..3772,
                                    },
                                ],
                                span: 3764..3772,
                            },
                            span: 3762..3772,
                        },
                    ],
                    span: 3712..3773,
                },
                name: IdentifierNode {
                    text: "StringItem",
                    span: 3701..3711,
                },
                span: 3695..3773,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "\\u{",
                                                                span: 3824..3827,
                                                            },
                                                            span: 3823..3828,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3823..3829,
                                                },
                                                span: 3823..3829,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "HEX",
                                                            span: 3829..3832,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3829..3833,
                                                },
                                                span: 3829..3833,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "}",
                                                                span: 3834..3835,
                                                            },
                                                            span: 3833..3836,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3833..3837,
                                                },
                                                span: 3833..3837,
                                            },
                                        ],
                                        span: 3823..3837,
                                    },
                                ],
                                span: 3823..3837,
                            },
                        ],
                        span: 3823..3837,
                    },
                    span: 3817..3838,
                },
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "escape",
                                                                        span: 3781..3787,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 3781..3787,
                                                            },
                                                            span: 3781..3787,
                                                        },
                                                    ],
                                                    span: 3781..3787,
                                                },
                                            ],
                                            span: 3781..3787,
                                        },
                                    ],
                                    span: 3781..3787,
                                },
                            ],
                            span: 3780..3788,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 3775..3780,
                            },
                            span: 3774..3780,
                        },
                        span: 3774..3788,
                    },
                ],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 3789..3795,
                        },
                        span: 3789..3795,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "EscapedUnicode",
                    span: 3802..3816,
                },
                span: 3774..3838,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "\\",
                                                                span: 3896..3897,
                                                            },
                                                            span: 3895..3898,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3895..3899,
                                                },
                                                span: 3895..3899,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ANY",
                                                            span: 3899..3902,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3899..3903,
                                                },
                                                span: 3899..3903,
                                            },
                                        ],
                                        span: 3895..3903,
                                    },
                                ],
                                span: 3895..3903,
                            },
                        ],
                        span: 3895..3903,
                    },
                    span: 3889..3904,
                },
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "escape",
                                                                        span: 3846..3852,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 3846..3852,
                                                            },
                                                            span: 3846..3852,
                                                        },
                                                    ],
                                                    span: 3846..3852,
                                                },
                                            ],
                                            span: 3846..3852,
                                        },
                                    ],
                                    span: 3846..3852,
                                },
                            ],
                            span: 3845..3853,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 3840..3845,
                            },
                            span: 3839..3845,
                        },
                        span: 3839..3853,
                    },
                ],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 3854..3860,
                        },
                        span: 3854..3860,
                    },
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 3861..3865,
                        },
                        span: 3861..3865,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "EscapedCharacter",
                    span: 3872..3888,
                },
                span: 3839..3904,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexRange(
                                                        RegexRangeNode {
                                                            regex_negative: None,
                                                            text: "[0-9a-fA-F]",
                                                            span: 3926..3937,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Range(
                                                            RangeNode {
                                                                max: Some(
                                                                    IntegerNode {
                                                                        text: "6",
                                                                        span: 3941..3942,
                                                                    },
                                                                ),
                                                                min: Some(
                                                                    IntegerNode {
                                                                        text: "1",
                                                                        span: 3938..3939,
                                                                    },
                                                                ),
                                                                span: 3937..3943,
                                                            },
                                                        ),
                                                    ],
                                                    span: 3926..3943,
                                                },
                                                span: 3926..3943,
                                            },
                                        ],
                                        span: 3926..3944,
                                    },
                                ],
                                span: 3926..3944,
                            },
                        ],
                        span: 3926..3944,
                    },
                    span: 3920..3945,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 3905..3909,
                        },
                        span: 3905..3909,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "HEX",
                    span: 3916..3919,
                },
                span: 3905..3945,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexEmbed(
                                                        RegexEmbedNode {
                                                            regex_item: [
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "[",
                                                                        span: 3972..3973,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "^",
                                                                        span: 3973..3974,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "\"",
                                                                        span: 3974..3975,
                                                                    },
                                                                ),
                                                                EscapedCharacter(
                                                                    EscapedCharacterNode {
                                                                        text: "\\\\",
                                                                        span: 3975..3977,
                                                                    },
                                                                ),
                                                                EscapedCharacter(
                                                                    EscapedCharacterNode {
                                                                        text: "\\\\",
                                                                        span: 3977..3979,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "]",
                                                                        span: 3979..3980,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "+",
                                                                        span: 3980..3981,
                                                                    },
                                                                ),
                                                            ],
                                                            span: 3971..3982,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 3971..3983,
                                                },
                                                span: 3971..3983,
                                            },
                                        ],
                                        span: 3971..3983,
                                    },
                                ],
                                span: 3971..3983,
                            },
                        ],
                        span: 3971..3983,
                    },
                    span: 3965..3984,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 3946..3950,
                        },
                        span: 3946..3950,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "TextAny",
                    span: 3957..3964,
                },
                span: 3946..3984,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "/",
                                                                span: 4137..4138,
                                                            },
                                                            span: 4136..4139,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4136..4140,
                                                },
                                                span: 4136..4140,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RegexItem",
                                                            span: 4140..4149,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many1,
                                                    ],
                                                    span: 4140..4150,
                                                },
                                                span: 4140..4150,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "/",
                                                                span: 4152..4153,
                                                            },
                                                            span: 4151..4154,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4151..4155,
                                                },
                                                span: 4151..4155,
                                            },
                                        ],
                                        span: 4136..4155,
                                    },
                                ],
                                span: 4136..4155,
                            },
                        ],
                        span: 4136..4155,
                    },
                    span: 4130..4156,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 4106..4112,
                        },
                        span: 4106..4112,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "RegexEmbed",
                    span: 4119..4129,
                },
                span: 4106..4156,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "EscapedCharacter",
                                                            span: 4181..4197,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4181..4202,
                                                },
                                                span: 4181..4202,
                                            },
                                        ],
                                        span: 4181..4202,
                                    },
                                ],
                                span: 4181..4202,
                            },
                            span: 4179..4202,
                        },
                        UnionBranchNode {
                            branch_tag: None,
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RegexCharacter",
                                                            span: 4204..4218,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4204..4219,
                                                },
                                                span: 4204..4219,
                                            },
                                        ],
                                        span: 4204..4219,
                                    },
                                ],
                                span: 4204..4219,
                            },
                            span: 4202..4219,
                        },
                    ],
                    span: 4173..4220,
                },
                name: IdentifierNode {
                    text: "RegexItem",
                    span: 4163..4172,
                },
                span: 4157..4220,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "/",
                                                                span: 4262..4263,
                                                            },
                                                            span: 4261..4264,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Negative,
                                                    ],
                                                    suffix: [],
                                                    span: 4260..4265,
                                                },
                                                span: 4260..4265,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "ANY",
                                                            span: 4265..4268,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4265..4269,
                                                },
                                                span: 4265..4269,
                                            },
                                        ],
                                        span: 4260..4269,
                                    },
                                ],
                                span: 4260..4269,
                            },
                        ],
                        span: 4260..4269,
                    },
                    span: 4254..4270,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 4221..4227,
                        },
                        span: 4221..4227,
                    },
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 4228..4232,
                        },
                        span: 4228..4232,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "RegexCharacter",
                    span: 4239..4253,
                },
                span: 4221..4270,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "[",
                                                                span: 4307..4308,
                                                            },
                                                            span: 4306..4309,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4306..4310,
                                                },
                                                span: 4306..4310,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "RegexNegative",
                                                            span: 4310..4323,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 4310..4324,
                                                },
                                                span: 4310..4324,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: StringRaw(
                                                                                                StringRawNode {
                                                                                                    string_raw_text: StringRawTextNode {
                                                                                                        text: "]",
                                                                                                        span: 4328..4329,
                                                                                                    },
                                                                                                    span: 4327..4330,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [
                                                                                                Negative,
                                                                                            ],
                                                                                            suffix: [],
                                                                                            span: 4326..4331,
                                                                                        },
                                                                                        span: 4326..4331,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "ANY",
                                                                                                    span: 4331..4334,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 4331..4334,
                                                                                        },
                                                                                        span: 4331..4334,
                                                                                    },
                                                                                ],
                                                                                span: 4326..4334,
                                                                            },
                                                                        ],
                                                                        span: 4326..4334,
                                                                    },
                                                                ],
                                                                span: 4326..4334,
                                                            },
                                                            span: 4325..4335,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 4325..4336,
                                                },
                                                span: 4325..4336,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "]",
                                                                span: 4338..4339,
                                                            },
                                                            span: 4337..4340,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4337..4341,
                                                },
                                                span: 4337..4341,
                                            },
                                        ],
                                        span: 4306..4341,
                                    },
                                ],
                                span: 4306..4341,
                            },
                        ],
                        span: 4306..4341,
                    },
                    span: 4300..4342,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 4271..4277,
                        },
                        span: 4271..4277,
                    },
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 4278..4282,
                        },
                        span: 4278..4282,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "RegexRange",
                    span: 4289..4299,
                },
                span: 4271..4342,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "^",
                                                                span: 4370..4371,
                                                            },
                                                            span: 4369..4372,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4369..4373,
                                                },
                                                span: 4369..4373,
                                            },
                                        ],
                                        span: 4369..4373,
                                    },
                                ],
                                span: 4369..4373,
                            },
                        ],
                        span: 4369..4373,
                    },
                    span: 4363..4374,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "RegexNegative",
                    span: 4349..4362,
                },
                span: 4343..4374,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "OP_CATEGORY",
                                                            span: 4524..4535,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Remark,
                                                    ],
                                                    suffix: [],
                                                    span: 4523..4536,
                                                },
                                                span: 4523..4536,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "{",
                                                                span: 4537..4538,
                                                            },
                                                            span: 4536..4539,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4536..4540,
                                                },
                                                span: 4536..4540,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: Some(
                                                                                            IdentifierNode {
                                                                                                text: "group",
                                                                                                span: 4541..4546,
                                                                                            },
                                                                                        ),
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 4547..4557,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 4547..4558,
                                                                                        },
                                                                                        span: 4541..4558,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: StringRaw(
                                                                                                StringRawNode {
                                                                                                    string_raw_text: StringRawTextNode {
                                                                                                        text: "=",
                                                                                                        span: 4559..4560,
                                                                                                    },
                                                                                                    span: 4558..4561,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 4558..4561,
                                                                                        },
                                                                                        span: 4558..4561,
                                                                                    },
                                                                                ],
                                                                                span: 4541..4561,
                                                                            },
                                                                        ],
                                                                        span: 4541..4561,
                                                                    },
                                                                ],
                                                                span: 4541..4561,
                                                            },
                                                            span: 4540..4562,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 4540..4563,
                                                },
                                                span: 4540..4563,
                                            },
                                            ExpressionTagNode {
                                                identifier: Some(
                                                    IdentifierNode {
                                                        text: "script",
                                                        span: 4564..4570,
                                                    },
                                                ),
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 4571..4581,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4571..4582,
                                                },
                                                span: 4564..4582,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "}",
                                                                span: 4583..4584,
                                                            },
                                                            span: 4582..4585,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4582..4586,
                                                },
                                                span: 4582..4586,
                                            },
                                        ],
                                        span: 4523..4586,
                                    },
                                ],
                                span: 4523..4586,
                            },
                        ],
                        span: 4523..4586,
                    },
                    span: 4517..4587,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "Category",
                    span: 4508..4516,
                },
                span: 4502..4587,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 4746..4756,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4746..4757,
                                                },
                                                span: 4746..4757,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: GroupExpression(
                                                                                                GroupExpressionNode {
                                                                                                    expression: ExpressionNode {
                                                                                                        expression_hard: [
                                                                                                            ExpressionHardNode {
                                                                                                                expression_soft: [
                                                                                                                    ExpressionSoftNode {
                                                                                                                        expression_tag: [
                                                                                                                            ExpressionTagNode {
                                                                                                                                identifier: None,
                                                                                                                                term: TermNode {
                                                                                                                                    atomic: StringRaw(
                                                                                                                                        StringRawNode {
                                                                                                                                            string_raw_text: StringRawTextNode {
                                                                                                                                                text: ".",
                                                                                                                                                span: 4760..4761,
                                                                                                                                            },
                                                                                                                                            span: 4759..4762,
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                    prefix: [],
                                                                                                                                    suffix: [],
                                                                                                                                    span: 4759..4763,
                                                                                                                                },
                                                                                                                                span: 4759..4763,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                        span: 4759..4763,
                                                                                                                    },
                                                                                                                ],
                                                                                                                span: 4759..4763,
                                                                                                            },
                                                                                                            ExpressionHardNode {
                                                                                                                expression_soft: [
                                                                                                                    ExpressionSoftNode {
                                                                                                                        expression_tag: [
                                                                                                                            ExpressionTagNode {
                                                                                                                                identifier: None,
                                                                                                                                term: TermNode {
                                                                                                                                    atomic: StringRaw(
                                                                                                                                        StringRawNode {
                                                                                                                                            string_raw_text: StringRawTextNode {
                                                                                                                                                text: "::",
                                                                                                                                                span: 4766..4768,
                                                                                                                                            },
                                                                                                                                            span: 4765..4769,
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                    prefix: [],
                                                                                                                                    suffix: [],
                                                                                                                                    span: 4765..4769,
                                                                                                                                },
                                                                                                                                span: 4765..4769,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                        span: 4765..4769,
                                                                                                                    },
                                                                                                                ],
                                                                                                                span: 4765..4769,
                                                                                                            },
                                                                                                        ],
                                                                                                        span: 4759..4769,
                                                                                                    },
                                                                                                    span: 4758..4770,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 4758..4771,
                                                                                        },
                                                                                        span: 4758..4771,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 4771..4781,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 4771..4781,
                                                                                        },
                                                                                        span: 4771..4781,
                                                                                    },
                                                                                ],
                                                                                span: 4758..4781,
                                                                            },
                                                                        ],
                                                                        span: 4758..4781,
                                                                    },
                                                                ],
                                                                span: 4758..4781,
                                                            },
                                                            span: 4757..4782,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 4757..4783,
                                                },
                                                span: 4757..4783,
                                            },
                                        ],
                                        span: 4746..4783,
                                    },
                                ],
                                span: 4746..4784,
                            },
                        ],
                        span: 4746..4784,
                    },
                    span: 4740..4785,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: Some(
                    IdentifierNode {
                        text: "Namepath",
                        span: 4731..4739,
                    },
                ),
                name: IdentifierNode {
                    text: "NamepathFree",
                    span: 4715..4727,
                },
                span: 4709..4785,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 4807..4817,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4807..4818,
                                                },
                                                span: 4807..4818,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: StringRaw(
                                                                                                StringRawNode {
                                                                                                    string_raw_text: StringRawTextNode {
                                                                                                        text: "::",
                                                                                                        span: 4820..4822,
                                                                                                    },
                                                                                                    span: 4819..4823,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 4819..4824,
                                                                                        },
                                                                                        span: 4819..4824,
                                                                                    },
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Identifier",
                                                                                                    span: 4824..4834,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 4824..4834,
                                                                                        },
                                                                                        span: 4824..4834,
                                                                                    },
                                                                                ],
                                                                                span: 4819..4834,
                                                                            },
                                                                        ],
                                                                        span: 4819..4834,
                                                                    },
                                                                ],
                                                                span: 4819..4834,
                                                            },
                                                            span: 4818..4835,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Many,
                                                    ],
                                                    span: 4818..4836,
                                                },
                                                span: 4818..4836,
                                            },
                                        ],
                                        span: 4807..4836,
                                    },
                                ],
                                span: 4807..4837,
                            },
                        ],
                        span: 4807..4837,
                    },
                    span: 4801..4838,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "Namepath",
                    span: 4792..4800,
                },
                span: 4786..4838,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexEmbed(
                                                        RegexEmbedNode {
                                                            regex_item: [
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "[",
                                                                        span: 4868..4869,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "_",
                                                                        span: 4869..4870,
                                                                    },
                                                                ),
                                                                EscapedCharacter(
                                                                    EscapedCharacterNode {
                                                                        text: "\\p",
                                                                        span: 4870..4872,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "{",
                                                                        span: 4872..4873,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "X",
                                                                        span: 4873..4874,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "I",
                                                                        span: 4874..4875,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "D",
                                                                        span: 4875..4876,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "_",
                                                                        span: 4876..4877,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "s",
                                                                        span: 4877..4878,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "t",
                                                                        span: 4878..4879,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "a",
                                                                        span: 4879..4880,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "r",
                                                                        span: 4880..4881,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "t",
                                                                        span: 4881..4882,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "}",
                                                                        span: 4882..4883,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "]",
                                                                        span: 4883..4884,
                                                                    },
                                                                ),
                                                                EscapedCharacter(
                                                                    EscapedCharacterNode {
                                                                        text: "\\p",
                                                                        span: 4884..4886,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "{",
                                                                        span: 4886..4887,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "X",
                                                                        span: 4887..4888,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "I",
                                                                        span: 4888..4889,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "D",
                                                                        span: 4889..4890,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "_",
                                                                        span: 4890..4891,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "c",
                                                                        span: 4891..4892,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "o",
                                                                        span: 4892..4893,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "n",
                                                                        span: 4893..4894,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "t",
                                                                        span: 4894..4895,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "i",
                                                                        span: 4895..4896,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "n",
                                                                        span: 4896..4897,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "u",
                                                                        span: 4897..4898,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "e",
                                                                        span: 4898..4899,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "}",
                                                                        span: 4899..4900,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "*",
                                                                        span: 4900..4901,
                                                                    },
                                                                ),
                                                            ],
                                                            span: 4867..4902,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4867..4903,
                                                },
                                                span: 4867..4903,
                                            },
                                        ],
                                        span: 4867..4903,
                                    },
                                ],
                                span: 4867..4903,
                            },
                        ],
                        span: 4867..4903,
                    },
                    span: 4861..4904,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 4839..4843,
                        },
                        span: 4839..4843,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "Identifier",
                    span: 4850..4860,
                },
                span: 4839..4904,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "True",
                                        span: 4936..4940,
                                    },
                                    right_associativity: None,
                                    span: 4935..4940,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "true",
                                                                span: 4928..4932,
                                                            },
                                                            span: 4927..4933,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4927..4935,
                                                },
                                                span: 4927..4935,
                                            },
                                        ],
                                        span: 4927..4935,
                                    },
                                ],
                                span: 4927..4935,
                            },
                            span: 4925..4940,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "False",
                                        span: 4956..4961,
                                    },
                                    right_associativity: None,
                                    span: 4955..4961,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "false",
                                                                span: 4948..4953,
                                                            },
                                                            span: 4947..4954,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 4947..4955,
                                                },
                                                span: 4947..4955,
                                            },
                                        ],
                                        span: 4947..4955,
                                    },
                                ],
                                span: 4947..4955,
                            },
                            span: 4945..4961,
                        },
                    ],
                    span: 4919..4963,
                },
                name: IdentifierNode {
                    text: "Boolean",
                    span: 4911..4918,
                },
                span: 4905..4963,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexEmbed(
                                                        RegexEmbedNode {
                                                            regex_item: [
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "0",
                                                                        span: 5109..5110,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "|",
                                                                        span: 5110..5111,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "[",
                                                                        span: 5111..5112,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "1",
                                                                        span: 5112..5113,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "-",
                                                                        span: 5113..5114,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "9",
                                                                        span: 5114..5115,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "]",
                                                                        span: 5115..5116,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "[",
                                                                        span: 5116..5117,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "0",
                                                                        span: 5117..5118,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "-",
                                                                        span: 5118..5119,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "9",
                                                                        span: 5119..5120,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "]",
                                                                        span: 5120..5121,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "*",
                                                                        span: 5121..5122,
                                                                    },
                                                                ),
                                                            ],
                                                            span: 5108..5123,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 5108..5124,
                                                },
                                                span: 5108..5124,
                                            },
                                        ],
                                        span: 5108..5124,
                                    },
                                ],
                                span: 5108..5124,
                            },
                        ],
                        span: 5108..5124,
                    },
                    span: 5102..5125,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "text",
                            span: 5083..5087,
                        },
                        span: 5083..5087,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "Integer",
                    span: 5094..5101,
                },
                span: 5083..5125,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "{",
                                                                span: 5150..5151,
                                                            },
                                                            span: 5149..5152,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 5149..5153,
                                                },
                                                span: 5149..5153,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Integer",
                                                            span: 5153..5160,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 5153..5161,
                                                },
                                                span: 5153..5161,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "}",
                                                                span: 5162..5163,
                                                            },
                                                            span: 5161..5164,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 5161..5165,
                                                },
                                                span: 5161..5165,
                                            },
                                        ],
                                        span: 5149..5165,
                                    },
                                ],
                                span: 5149..5165,
                            },
                        ],
                        span: 5149..5165,
                    },
                    span: 5143..5166,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "RangeExact",
                    span: 5132..5142,
                },
                span: 5126..5166,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "{",
                                                                span: 5186..5187,
                                                            },
                                                            span: 5185..5188,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 5185..5189,
                                                },
                                                span: 5185..5189,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: Some(
                                                                                            IdentifierNode {
                                                                                                text: "min",
                                                                                                span: 5190..5193,
                                                                                            },
                                                                                        ),
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Integer",
                                                                                                    span: 5194..5201,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 5194..5201,
                                                                                        },
                                                                                        span: 5190..5201,
                                                                                    },
                                                                                ],
                                                                                span: 5190..5201,
                                                                            },
                                                                        ],
                                                                        span: 5190..5201,
                                                                    },
                                                                ],
                                                                span: 5190..5201,
                                                            },
                                                            span: 5189..5202,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 5189..5203,
                                                },
                                                span: 5189..5203,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: ",",
                                                                span: 5205..5206,
                                                            },
                                                            span: 5204..5207,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 5204..5208,
                                                },
                                                span: 5204..5208,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: Some(
                                                                                            IdentifierNode {
                                                                                                text: "max",
                                                                                                span: 5209..5212,
                                                                                            },
                                                                                        ),
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "Integer",
                                                                                                    span: 5213..5220,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 5213..5220,
                                                                                        },
                                                                                        span: 5209..5220,
                                                                                    },
                                                                                ],
                                                                                span: 5209..5220,
                                                                            },
                                                                        ],
                                                                        span: 5209..5220,
                                                                    },
                                                                ],
                                                                span: 5209..5220,
                                                            },
                                                            span: 5208..5221,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [
                                                        Optional,
                                                    ],
                                                    span: 5208..5222,
                                                },
                                                span: 5208..5222,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "}",
                                                                span: 5224..5225,
                                                            },
                                                            span: 5223..5226,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 5223..5227,
                                                },
                                                span: 5223..5227,
                                            },
                                        ],
                                        span: 5185..5227,
                                    },
                                ],
                                span: 5185..5227,
                            },
                        ],
                        span: 5185..5227,
                    },
                    span: 5179..5228,
                },
                decorator_call: [],
                modifier_call: [],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "Range",
                    span: 5173..5178,
                },
                span: 5167..5228,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: GroupExpression(
                                                        GroupExpressionNode {
                                                            expression: ExpressionNode {
                                                                expression_hard: [
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "KW_CLASS",
                                                                                                    span: 5386..5394,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 5386..5395,
                                                                                        },
                                                                                        span: 5386..5395,
                                                                                    },
                                                                                ],
                                                                                span: 5386..5395,
                                                                            },
                                                                        ],
                                                                        span: 5386..5395,
                                                                    },
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "KW_UNION",
                                                                                                    span: 5397..5405,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 5397..5406,
                                                                                        },
                                                                                        span: 5397..5406,
                                                                                    },
                                                                                ],
                                                                                span: 5397..5406,
                                                                            },
                                                                        ],
                                                                        span: 5397..5406,
                                                                    },
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "KW_GROUP",
                                                                                                    span: 5408..5416,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 5408..5417,
                                                                                        },
                                                                                        span: 5408..5417,
                                                                                    },
                                                                                ],
                                                                                span: 5408..5417,
                                                                            },
                                                                        ],
                                                                        span: 5408..5417,
                                                                    },
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "KW_MACRO",
                                                                                                    span: 5419..5427,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 5419..5428,
                                                                                        },
                                                                                        span: 5419..5428,
                                                                                    },
                                                                                ],
                                                                                span: 5419..5428,
                                                                            },
                                                                        ],
                                                                        span: 5419..5428,
                                                                    },
                                                                    ExpressionHardNode {
                                                                        expression_soft: [
                                                                            ExpressionSoftNode {
                                                                                expression_tag: [
                                                                                    ExpressionTagNode {
                                                                                        identifier: None,
                                                                                        term: TermNode {
                                                                                            atomic: Identifier(
                                                                                                IdentifierNode {
                                                                                                    text: "KW_CLIMB",
                                                                                                    span: 5430..5438,
                                                                                                },
                                                                                            ),
                                                                                            prefix: [],
                                                                                            suffix: [],
                                                                                            span: 5430..5438,
                                                                                        },
                                                                                        span: 5430..5438,
                                                                                    },
                                                                                ],
                                                                                span: 5430..5438,
                                                                            },
                                                                        ],
                                                                        span: 5430..5438,
                                                                    },
                                                                ],
                                                                span: 5386..5438,
                                                            },
                                                            span: 5385..5439,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Negative,
                                                    ],
                                                    suffix: [],
                                                    span: 5384..5440,
                                                },
                                                span: 5384..5440,
                                            },
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: Identifier(
                                                        IdentifierNode {
                                                            text: "Identifier",
                                                            span: 5441..5451,
                                                        },
                                                    ),
                                                    prefix: [
                                                        Remark,
                                                    ],
                                                    suffix: [],
                                                    span: 5440..5452,
                                                },
                                                span: 5440..5452,
                                            },
                                        ],
                                        span: 5384..5452,
                                    },
                                ],
                                span: 5384..5452,
                            },
                        ],
                        span: 5384..5452,
                    },
                    span: 5378..5453,
                },
                decorator_call: [],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "atomic",
                            span: 5350..5356,
                        },
                        span: 5350..5356,
                    },
                ],
                op_remark: Some(
                    OpRemarkNode {
                        span: 5376..5377,
                    },
                ),
                cast: None,
                name: IdentifierNode {
                    text: "ModifierCall",
                    span: 5363..5375,
                },
                span: 5350..5453,
            },
        ),
        GroupStatement(
            GroupStatementNode {
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Boolean(
                                                                    False,
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 5463..5468,
                                                            },
                                                            span: 5463..5468,
                                                        },
                                                    ],
                                                    span: 5463..5468,
                                                },
                                            ],
                                            span: 5463..5468,
                                        },
                                    ],
                                    span: 5463..5468,
                                },
                            ],
                            span: 5462..5469,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "railway",
                                span: 5455..5462,
                            },
                            span: 5454..5462,
                        },
                        span: 5454..5469,
                    },
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "keyword",
                                                                        span: 5477..5484,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 5477..5484,
                                                            },
                                                            span: 5477..5484,
                                                        },
                                                    ],
                                                    span: 5477..5484,
                                                },
                                            ],
                                            span: 5477..5484,
                                        },
                                    ],
                                    span: 5477..5484,
                                },
                            ],
                            span: 5476..5485,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 5471..5476,
                            },
                            span: 5470..5476,
                        },
                        span: 5470..5485,
                    },
                ],
                group_block: GroupBlockNode {
                    group_pair: [
                        GroupPairNode {
                            atomic: StringRaw(
                                StringRawNode {
                                    string_raw_text: StringRawTextNode {
                                        text: "\\p",
                                        span: 5512..5514,
                                    },
                                    span: 5511..5515,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "OP_CATEGORY",
                                span: 5498..5509,
                            },
                            span: 5498..5515,
                        },
                    ],
                    span: 5492..5517,
                },
                identifier: None,
                modifier_call: [],
                span: 5454..5517,
            },
        ),
        UnionStatement(
            UnionStatementNode {
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Boolean(
                                                                    False,
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 5527..5532,
                                                            },
                                                            span: 5527..5532,
                                                        },
                                                    ],
                                                    span: 5527..5532,
                                                },
                                            ],
                                            span: 5527..5532,
                                        },
                                    ],
                                    span: 5527..5532,
                                },
                            ],
                            span: 5526..5533,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "railway",
                                span: 5519..5526,
                            },
                            span: 5518..5526,
                        },
                        span: 5518..5533,
                    },
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "keyword",
                                                                        span: 5541..5548,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 5541..5548,
                                                            },
                                                            span: 5541..5548,
                                                        },
                                                    ],
                                                    span: 5541..5548,
                                                },
                                            ],
                                            span: 5541..5548,
                                        },
                                    ],
                                    span: 5541..5548,
                                },
                            ],
                            span: 5540..5549,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 5535..5540,
                            },
                            span: 5534..5540,
                        },
                        span: 5534..5549,
                    },
                ],
                modifier_call: [],
                op_remark: None,
                union_block: UnionBlockNode {
                    union_branch: [
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Parser",
                                        span: 5589..5595,
                                    },
                                    right_associativity: None,
                                    span: 5588..5595,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "parser",
                                                                span: 5577..5583,
                                                            },
                                                            span: 5576..5584,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 5576..5588,
                                                },
                                                span: 5576..5588,
                                            },
                                        ],
                                        span: 5576..5588,
                                    },
                                ],
                                span: 5576..5588,
                            },
                            span: 5574..5595,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "Inspector",
                                        span: 5615..5624,
                                    },
                                    right_associativity: None,
                                    span: 5614..5624,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "inspector",
                                                                span: 5603..5612,
                                                            },
                                                            span: 5602..5613,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 5602..5614,
                                                },
                                                span: 5602..5614,
                                            },
                                        ],
                                        span: 5602..5614,
                                    },
                                ],
                                span: 5602..5614,
                            },
                            span: 5600..5624,
                        },
                        UnionBranchNode {
                            branch_tag: Some(
                                BranchTagNode {
                                    identifier: IdentifierNode {
                                        text: "External",
                                        span: 5644..5652,
                                    },
                                    right_associativity: None,
                                    span: 5643..5652,
                                },
                            ),
                            expression_hard: ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: StringRaw(
                                                        StringRawNode {
                                                            string_raw_text: StringRawTextNode {
                                                                text: "external",
                                                                span: 5632..5640,
                                                            },
                                                            span: 5631..5641,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 5631..5643,
                                                },
                                                span: 5631..5643,
                                            },
                                        ],
                                        span: 5631..5643,
                                    },
                                ],
                                span: 5631..5643,
                            },
                            span: 5629..5652,
                        },
                    ],
                    span: 5568..5654,
                },
                name: IdentifierNode {
                    text: "KW_EXTERNAL",
                    span: 5556..5567,
                },
                span: 5518..5654,
            },
        ),
        GroupStatement(
            GroupStatementNode {
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Boolean(
                                                                    False,
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 5664..5669,
                                                            },
                                                            span: 5664..5669,
                                                        },
                                                    ],
                                                    span: 5664..5669,
                                                },
                                            ],
                                            span: 5664..5669,
                                        },
                                    ],
                                    span: 5664..5669,
                                },
                            ],
                            span: 5663..5670,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "railway",
                                span: 5656..5663,
                            },
                            span: 5655..5663,
                        },
                        span: 5655..5670,
                    },
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "keyword",
                                                                        span: 5678..5685,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 5678..5685,
                                                            },
                                                            span: 5678..5685,
                                                        },
                                                    ],
                                                    span: 5678..5685,
                                                },
                                            ],
                                            span: 5678..5685,
                                        },
                                    ],
                                    span: 5678..5685,
                                },
                            ],
                            span: 5677..5686,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 5672..5677,
                            },
                            span: 5671..5677,
                        },
                        span: 5671..5686,
                    },
                ],
                group_block: GroupBlockNode {
                    group_pair: [
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    regex_item: [
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "g",
                                                span: 5712..5713,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "r",
                                                span: 5713..5714,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "a",
                                                span: 5714..5715,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "m",
                                                span: 5715..5716,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "m",
                                                span: 5716..5717,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "a",
                                                span: 5717..5718,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "r",
                                                span: 5718..5719,
                                            },
                                        ),
                                    ],
                                    span: 5711..5720,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_GRAMMAR",
                                span: 5699..5709,
                            },
                            span: 5699..5720,
                        },
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    regex_item: [
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "u",
                                                span: 5737..5738,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "s",
                                                span: 5738..5739,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "i",
                                                span: 5739..5740,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5740..5741,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "g",
                                                span: 5741..5742,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5742..5743,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "u",
                                                span: 5743..5744,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "s",
                                                span: 5744..5745,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "e",
                                                span: 5745..5746,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5746..5747,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "i",
                                                span: 5747..5748,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "m",
                                                span: 5748..5749,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "p",
                                                span: 5749..5750,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "o",
                                                span: 5750..5751,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "r",
                                                span: 5751..5752,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "t",
                                                span: 5752..5753,
                                            },
                                        ),
                                    ],
                                    span: 5736..5754,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_IMPORT",
                                span: 5725..5734,
                            },
                            span: 5725..5754,
                        },
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    regex_item: [
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "c",
                                                span: 5770..5771,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "l",
                                                span: 5771..5772,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "a",
                                                span: 5772..5773,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "s",
                                                span: 5773..5774,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "s",
                                                span: 5774..5775,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5775..5776,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "s",
                                                span: 5776..5777,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "t",
                                                span: 5777..5778,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "r",
                                                span: 5778..5779,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "u",
                                                span: 5779..5780,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "c",
                                                span: 5780..5781,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "t",
                                                span: 5781..5782,
                                            },
                                        ),
                                    ],
                                    span: 5769..5783,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_CLASS",
                                span: 5759..5767,
                            },
                            span: 5759..5783,
                        },
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    regex_item: [
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "u",
                                                span: 5799..5800,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5800..5801,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "i",
                                                span: 5801..5802,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "o",
                                                span: 5802..5803,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5803..5804,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5804..5805,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "e",
                                                span: 5805..5806,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5806..5807,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "u",
                                                span: 5807..5808,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "m",
                                                span: 5808..5809,
                                            },
                                        ),
                                    ],
                                    span: 5798..5810,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_UNION",
                                span: 5788..5796,
                            },
                            span: 5788..5810,
                        },
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    regex_item: [
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "g",
                                                span: 5826..5827,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "r",
                                                span: 5827..5828,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "o",
                                                span: 5828..5829,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "u",
                                                span: 5829..5830,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "p",
                                                span: 5830..5831,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5831..5832,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "t",
                                                span: 5832..5833,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "o",
                                                span: 5833..5834,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "k",
                                                span: 5834..5835,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "e",
                                                span: 5835..5836,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5836..5837,
                                            },
                                        ),
                                    ],
                                    span: 5825..5838,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_GROUP",
                                span: 5815..5823,
                            },
                            span: 5815..5838,
                        },
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    regex_item: [
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "c",
                                                span: 5854..5855,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "l",
                                                span: 5855..5856,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "i",
                                                span: 5856..5857,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "m",
                                                span: 5857..5858,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "b",
                                                span: 5858..5859,
                                            },
                                        ),
                                    ],
                                    span: 5853..5860,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_CLIMB",
                                span: 5843..5851,
                            },
                            span: 5843..5860,
                        },
                        GroupPairNode {
                            atomic: RegexEmbed(
                                RegexEmbedNode {
                                    regex_item: [
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "m",
                                                span: 5876..5877,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "a",
                                                span: 5877..5878,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "c",
                                                span: 5878..5879,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "r",
                                                span: 5879..5880,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "o",
                                                span: 5880..5881,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5881..5882,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "d",
                                                span: 5882..5883,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "e",
                                                span: 5883..5884,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "f",
                                                span: 5884..5885,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5885..5886,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "f",
                                                span: 5886..5887,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "u",
                                                span: 5887..5888,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5888..5889,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "c",
                                                span: 5889..5890,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "t",
                                                span: 5890..5891,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "i",
                                                span: 5891..5892,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "o",
                                                span: 5892..5893,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5893..5894,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5894..5895,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "f",
                                                span: 5895..5896,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "u",
                                                span: 5896..5897,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5897..5898,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "c",
                                                span: 5898..5899,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5899..5900,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "f",
                                                span: 5900..5901,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "u",
                                                span: 5901..5902,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5902..5903,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "|",
                                                span: 5903..5904,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "f",
                                                span: 5904..5905,
                                            },
                                        ),
                                        RegexCharacter(
                                            RegexCharacterNode {
                                                text: "n",
                                                span: 5905..5906,
                                            },
                                        ),
                                    ],
                                    span: 5875..5907,
                                },
                            ),
                            identifier: IdentifierNode {
                                text: "KW_MACRO",
                                span: 5865..5873,
                            },
                            span: 5865..5907,
                        },
                    ],
                    span: 5693..5909,
                },
                identifier: None,
                modifier_call: [],
                span: 5655..5909,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexEmbed(
                                                        RegexEmbedNode {
                                                            regex_item: [
                                                                EscapedCharacter(
                                                                    EscapedCharacterNode {
                                                                        text: "\\p",
                                                                        span: 6076..6078,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "{",
                                                                        span: 6078..6079,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "W",
                                                                        span: 6079..6080,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "h",
                                                                        span: 6080..6081,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "i",
                                                                        span: 6081..6082,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "t",
                                                                        span: 6082..6083,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "e",
                                                                        span: 6083..6084,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "_",
                                                                        span: 6084..6085,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "S",
                                                                        span: 6085..6086,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "p",
                                                                        span: 6086..6087,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "a",
                                                                        span: 6087..6088,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "c",
                                                                        span: 6088..6089,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "e",
                                                                        span: 6089..6090,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "}",
                                                                        span: 6090..6091,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "+",
                                                                        span: 6091..6092,
                                                                    },
                                                                ),
                                                            ],
                                                            span: 6075..6093,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 6075..6094,
                                                },
                                                span: 6075..6094,
                                            },
                                        ],
                                        span: 6075..6094,
                                    },
                                ],
                                span: 6075..6094,
                            },
                        ],
                        span: 6075..6094,
                    },
                    span: 6069..6095,
                },
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Boolean(
                                                                    False,
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 6040..6045,
                                                            },
                                                            span: 6040..6045,
                                                        },
                                                    ],
                                                    span: 6040..6045,
                                                },
                                            ],
                                            span: 6040..6045,
                                        },
                                    ],
                                    span: 6040..6045,
                                },
                            ],
                            span: 6039..6046,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "railway",
                                span: 6032..6039,
                            },
                            span: 6031..6039,
                        },
                        span: 6031..6046,
                    },
                ],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "hide",
                            span: 6047..6051,
                        },
                        span: 6047..6051,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "WhiteSpace",
                    span: 6058..6068,
                },
                span: 6031..6095,
            },
        ),
        ClassStatement(
            ClassStatementNode {
                class_block: ClassBlockNode {
                    expression: ExpressionNode {
                        expression_hard: [
                            ExpressionHardNode {
                                expression_soft: [
                                    ExpressionSoftNode {
                                        expression_tag: [
                                            ExpressionTagNode {
                                                identifier: None,
                                                term: TermNode {
                                                    atomic: RegexEmbed(
                                                        RegexEmbedNode {
                                                            regex_item: [
                                                                EscapedCharacter(
                                                                    EscapedCharacterNode {
                                                                        text: "\\/",
                                                                        span: 6140..6142,
                                                                    },
                                                                ),
                                                                EscapedCharacter(
                                                                    EscapedCharacterNode {
                                                                        text: "\\/",
                                                                        span: 6142..6144,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "[",
                                                                        span: 6144..6145,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "^",
                                                                        span: 6145..6146,
                                                                    },
                                                                ),
                                                                EscapedCharacter(
                                                                    EscapedCharacterNode {
                                                                        text: "\\n",
                                                                        span: 6146..6148,
                                                                    },
                                                                ),
                                                                EscapedCharacter(
                                                                    EscapedCharacterNode {
                                                                        text: "\\r",
                                                                        span: 6148..6150,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "]",
                                                                        span: 6150..6151,
                                                                    },
                                                                ),
                                                                RegexCharacter(
                                                                    RegexCharacterNode {
                                                                        text: "*",
                                                                        span: 6151..6152,
                                                                    },
                                                                ),
                                                            ],
                                                            span: 6139..6153,
                                                        },
                                                    ),
                                                    prefix: [],
                                                    suffix: [],
                                                    span: 6139..6171,
                                                },
                                                span: 6139..6171,
                                            },
                                        ],
                                        span: 6139..6171,
                                    },
                                ],
                                span: 6139..6171,
                            },
                        ],
                        span: 6139..6171,
                    },
                    span: 6131..6172,
                },
                decorator_call: [
                    DecoratorCallNode {
                        call_body: CallBodyNode {
                            expression: [
                                ExpressionNode {
                                    expression_hard: [
                                        ExpressionHardNode {
                                            expression_soft: [
                                                ExpressionSoftNode {
                                                    expression_tag: [
                                                        ExpressionTagNode {
                                                            identifier: None,
                                                            term: TermNode {
                                                                atomic: Identifier(
                                                                    IdentifierNode {
                                                                        text: "comment",
                                                                        span: 6103..6110,
                                                                    },
                                                                ),
                                                                prefix: [],
                                                                suffix: [],
                                                                span: 6103..6110,
                                                            },
                                                            span: 6103..6110,
                                                        },
                                                    ],
                                                    span: 6103..6110,
                                                },
                                            ],
                                            span: 6103..6110,
                                        },
                                    ],
                                    span: 6103..6110,
                                },
                            ],
                            span: 6102..6111,
                        },
                        decorator_name: DecoratorNameNode {
                            identifier: IdentifierNode {
                                text: "style",
                                span: 6097..6102,
                            },
                            span: 6096..6102,
                        },
                        span: 6096..6111,
                    },
                ],
                modifier_call: [
                    ModifierCallNode {
                        identifier: IdentifierNode {
                            text: "hide",
                            span: 6112..6116,
                        },
                        span: 6112..6116,
                    },
                ],
                op_remark: None,
                cast: None,
                name: IdentifierNode {
                    text: "Comment",
                    span: 6123..6130,
                },
                span: 6096..6172,
            },
        ),
    ],
    span: 0..6174,
}